{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\msado\\\\OneDrive\\\\Pulpit\\\\video-stream\\\\video\\\\src\\\\components\\\\VideoPlayer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoPlayer = () => {\n  _s();\n  const videoRef = useRef(null);\n  const websocketRef = useRef(null);\n  const videoChunksRef = useRef([]);\n  console.log(videoChunksRef);\n  const [videoURL, setVideoURL] = useState(null);\n  console.log(videoURL);\n  useEffect(() => {\n    const socket = new WebSocket('ws://');\n    socket.onopen = () => {\n      socket.send(\"Message to send\");\n      console.log(\"Connected to server\");\n    };\n    socket.onmessage = event => {\n      const data = event.data;\n      const fileReader = new FileReader();\n      fileReader.onload = function (event) {\n        const base64Datas = event.target.result;\n        const base64Data = base64Datas.replace(/^data:application\\/octet-stream;base64,/, '');\n        const binaryDatas = atob(base64Data);\n        const binaryData = atob(binaryDatas);\n        const arrayBuffer = new Uint8Array(binaryData.length);\n        for (let i = 0; i < binaryData.length; i++) {\n          arrayBuffer[i] = binaryData.charCodeAt(i);\n        }\n        videoChunksRef.current.push(arrayBuffer);\n        const combinedBuffer = new Uint8Array(videoChunksRef.current.reduce((totalLength, chunk) => totalLength + chunk.length, 0));\n        let offset = 0;\n        videoChunksRef.current.forEach(chunk => {\n          combinedBuffer.set(chunk, offset);\n          offset += chunk.length;\n        });\n        const videoBlob = new Blob([combinedBuffer], {\n          type: 'video/mp4'\n        });\n        // console.log(videoBlob.type)\n\n        const videoURL = URL.createObjectURL(videoBlob);\n        setVideoURL(videoURL);\n      };\n      fileReader.readAsDataURL(data);\n    };\n    socket.onclose = () => {\n      console.log(\"Disconnected from server\");\n    };\n    websocketRef.current = socket;\n    return () => {\n      websocketRef.current.close();\n    };\n  }, []);\n  const handlePlayVideo = () => {\n    if (videoURL) {\n      videoRef.current.src = videoURL;\n      videoRef.current.play().catch(error => {\n        console.error(\"Error while playing video:\", error);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      controls: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePlayVideo,\n      children: \"Play Video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoPlayer, \"g7ga99xkv2z87iIo1AgWkIzGwbU=\");\n_c = VideoPlayer;\nexport default VideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","VideoPlayer","_s","videoRef","websocketRef","videoChunksRef","console","log","videoURL","setVideoURL","socket","WebSocket","onopen","send","onmessage","event","data","fileReader","FileReader","onload","base64Datas","target","result","base64Data","replace","binaryDatas","atob","binaryData","arrayBuffer","Uint8Array","length","i","charCodeAt","current","push","combinedBuffer","reduce","totalLength","chunk","offset","forEach","set","videoBlob","Blob","type","URL","createObjectURL","readAsDataURL","onclose","close","handlePlayVideo","src","play","catch","error","children","ref","controls","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/msado/OneDrive/Pulpit/video-stream/video/src/components/VideoPlayer.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nconst VideoPlayer = () => {\r\n  const videoRef = useRef(null);\r\n  const websocketRef = useRef(null);\r\n  const videoChunksRef = useRef([]);\r\n  console.log(videoChunksRef)\r\n  const [videoURL, setVideoURL] = useState(null);\r\nconsole.log(videoURL)\r\n  useEffect(() => {\r\n    const socket =new WebSocket('ws://')\r\n\r\n\r\n    socket.onopen = () => {\r\n      socket.send(\"Message to send\");\r\n      console.log(\"Connected to server\");\r\n    };\r\n\r\n    socket.onmessage = (event) => {\r\n      const data = event.data;\r\n      \r\n      const fileReader = new FileReader();\r\n\r\n      fileReader.onload = function(event) {\r\n\r\n        const base64Datas = event.target.result;\r\n\r\n        const base64Data = base64Datas.replace(/^data:application\\/octet-stream;base64,/, '');\r\n        \r\n        const binaryDatas = atob(base64Data);\r\n\r\n        const binaryData = atob(binaryDatas);\r\n\r\n\r\n        const arrayBuffer = new Uint8Array(binaryData.length);\r\n        for (let i = 0; i < binaryData.length; i++) {\r\n          arrayBuffer[i] = binaryData.charCodeAt(i);\r\n        }\r\n\r\n        videoChunksRef.current.push(arrayBuffer);\r\n\r\n\r\n        const combinedBuffer = new Uint8Array(videoChunksRef.current.reduce((totalLength, chunk) => totalLength + chunk.length, 0));\r\n        let offset = 0;\r\n        videoChunksRef.current.forEach(chunk => {\r\n          combinedBuffer.set(chunk, offset);\r\n          offset += chunk.length;\r\n        });\r\n\r\n\r\n        const videoBlob = new Blob([combinedBuffer], { type: 'video/mp4' });\r\n        // console.log(videoBlob.type)\r\n\r\n\r\n        const videoURL = URL.createObjectURL(videoBlob);\r\n\r\n        setVideoURL(videoURL);\r\n      };\r\n\r\n\r\n      fileReader.readAsDataURL(data);\r\n    };\r\n\r\n    socket.onclose = () => {\r\n      console.log(\"Disconnected from server\");\r\n    };\r\n\r\n    websocketRef.current = socket;\r\n\r\n    return () => {\r\n      websocketRef.current.close();\r\n    };\r\n  }, []);\r\n\r\n  const handlePlayVideo = () => {\r\n    if (videoURL) {\r\n      videoRef.current.src = videoURL;\r\n      videoRef.current.play()\r\n        .catch(error => {\r\n          console.error(\"Error while playing video:\", error);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <video ref={videoRef} controls />\r\n      <button onClick={handlePlayVideo}>Play Video</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoPlayer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}